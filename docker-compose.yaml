version: '3.6'
x-defaults: &defaults
  env_file: .env
  logging:
    options:
      max-size: "10m"
      max-file: "3"
  deploy:
    restart_policy:
      condition: on-failure
      delay: 3s
      max_attempts: 10
      window: 1s
    resources:
      limits:
        cpus: '1.00'
        memory: 1GB
      reservations:
        cpus: '0.50'
        memory: 500M

services:
  metadata:
    <<: *defaults
    container_name: metadata
    image: "registry.gitlab.com/trivialsec/workers/metadata:${IMAGE_TAG:-latest}"
    # entrypoint: "bash -c 'tail -f /dev/null'"
    environment:
      - LOG_LEVEL=${LOG_LEVEL}
      - AWS_ACCESS_KEY_ID=${TF_VAR_aws_access_key_id}
      - AWS_SECRET_ACCESS_KEY=${TF_VAR_aws_secret_access_key}
    volumes:
      - ./src/metadata:/srv/app/metadata
      - ./src/worker:/srv/app/worker
      - ./src/main.py:/srv/app/main.py
      - ./src/s3_upload.py:/srv/app/s3_upload.py
    networks:
      default:
        aliases:
          - metadata

  testssl:
    <<: *defaults
    container_name: testssl
    image: "registry.gitlab.com/trivialsec/workers/testssl:${IMAGE_TAG:-latest}"
    # entrypoint: "bash -c 'tail -f /dev/null'"
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - AWS_ACCESS_KEY_ID=${TF_VAR_aws_access_key_id}
      - AWS_SECRET_ACCESS_KEY=${TF_VAR_aws_secret_access_key}
      - TESTSSL_INSTALL_DIR=${TESTSSL_INSTALL_DIR:-/testssl}
    volumes:
      - ./docker/testssl/bin:/srv/app/lib/bin
      - ./src/testssl:/srv/app/testssl
      - ./src/worker:/srv/app/worker
      - ./src/main.py:/srv/app/main.py
      - ./src/s3_upload.py:/srv/app/s3_upload.py
    networks:
      default:
        aliases:
          - testssl

  drill:
    <<: *defaults
    container_name: drill
    image: "registry.gitlab.com/trivialsec/workers/drill:${IMAGE_TAG:-latest}"
    # entrypoint: "bash -c 'tail -f /dev/null'"
    environment:
      - LOG_LEVEL=${LOG_LEVEL}
      - AWS_ACCESS_KEY_ID=${TF_VAR_aws_access_key_id}
      - AWS_SECRET_ACCESS_KEY=${TF_VAR_aws_secret_access_key}
    volumes:
      - ./docker/drill/bin:/srv/app/lib/bin
      - ./src/drill:/srv/app/drill
      - ./src/worker:/srv/app/worker
      - ./src/main.py:/srv/app/main.py
      - ./src/s3_upload.py:/srv/app/s3_upload.py
    networks:
      default:
        aliases:
          - drill

  amass:
    <<: *defaults
    container_name: amass
    image: "registry.gitlab.com/trivialsec/workers/amass:${IMAGE_TAG:-latest}"
    # entrypoint: "bash -c 'tail -f /dev/null'"
    environment:
      - LOG_LEVEL=${LOG_LEVEL}
      - AWS_ACCESS_KEY_ID=${TF_VAR_aws_access_key_id}
      - AWS_SECRET_ACCESS_KEY=${TF_VAR_aws_secret_access_key}
    volumes:
      - ./docker/amass/bin:/srv/app/lib/bin
      - ./src/amass:/srv/app/amass
      - ./src/worker:/srv/app/worker
      - ./src/main.py:/srv/app/main.py
      - ./src/s3_upload.py:/srv/app/s3_upload.py
    networks:
      default:
        aliases:
          - amass

  nmap:
    <<: *defaults
    container_name: nmap
    image: "registry.gitlab.com/trivialsec/workers/nmap:${IMAGE_TAG:-latest}"
    # entrypoint: "bash -c 'tail -f /dev/null'"
    environment:
      - LOG_LEVEL=${LOG_LEVEL}
      - AWS_ACCESS_KEY_ID=${TF_VAR_aws_access_key_id}
      - AWS_SECRET_ACCESS_KEY=${TF_VAR_aws_secret_access_key}
    volumes:
      - ./docker/nmap/bin:/srv/app/lib/bin
      - ./src/nmap:/srv/app/nmap
      - ./src/worker:/srv/app/worker
      - ./src/main.py:/srv/app/main.py
      - ./src/s3_upload.py:/srv/app/s3_upload.py
    networks:
      default:
        aliases:
          - nmap
    cap_add:
      - DAC_OVERRIDE
      - NET_RAW
      - NET_ADMIN
      - NET_BIND_SERVICE

networks:
  default:
    external:
      name: trivialsec
